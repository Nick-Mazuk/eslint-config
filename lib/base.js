module.exports = {
    env: {
        node: true,
    },
    plugins: [
        'import',
        'sonarjs',
        'no-secrets',
        'unicorn',
        'promise',
        'eslint-comments',
        'deprecation',
        'unused-imports',
        'jest',
    ],
    extends: [
        'eslint:recommended',
        'plugin:promise/recommended',
        'plugin:@typescript-eslint/recommended',
        'plugin:jest/recommended',
        'plugin:jest/style',
        'plugin:prettier/recommended',
    ],
    parser: '@typescript-eslint/parser',
    parserOptions: {
        sourceType: 'module',
        ecmaVersion: 2021,
        project: './tsconfig.json',
    },
    ignorePatterns: ['coverage/*'],
    rules: {
        'prettier/prettier': [
            'error',
            {
                // also defined in svelte config -- change values there if updated
                singleQuote: true,
                printWidth: 100,
                tabWidth: 4,
                useTabs: false,
                semi: false,
                quoteProps: 'as-needed',
                jsxSingleQuote: true,
                trailingComma: 'es5',
                bracketSpacing: true,
                jsxBracketSameLine: false,
                arrowParens: 'always',
                proseWrap: 'never',
                htmlWhitespaceSensitivity: 'css',
                endOfLine: 'lf',
                embeddedLanguageFormatting: 'auto',
            },
        ],
        'linebreak-style': ['error', 'unix'],
        'no-await-in-loop': 'error',
        'no-console': 'error',
        'no-extra-parens': 'off',
        'no-loss-of-precision': 'error',
        'no-promise-executor-return': 'error',
        'no-template-curly-in-string': 'error',
        'no-unreachable-loop': 'error',
        'no-useless-backreference': 'error',
        'require-atomic-updates': 'error',
        'accessor-pairs': 'error',
        'array-callback-return': 'error',
        'class-methods-use-this': 'error',
        'consistent-return': 'error',
        'default-case': 'error',
        'default-case-last': 'error',
        'default-param-last': 'error',
        curly: ['error', 'multi-or-nest', 'consistent'],
        'dot-location': ['error', 'property'],
        'dot-notation': 'error',
        eqeqeq: 'error',
        'grouped-accessor-pairs': ['error', 'getBeforeSet'],
        'guard-for-in': 'warn',
        'max-classes-per-file': ['error', 1],
        'no-caller': 'error',
        'no-alert': 'error',
        'no-constructor-return': 'error',
        'no-div-regex': 'error',
        'no-else-return': 'error',
        'no-eval': 'error',
        'no-extend-native': 'error',
        'no-extra-bind': 'error',
        'no-extra-label': 'error',
        'no-floating-decimal': 'error',
        'no-implicit-coercion': 'error',
        'no-implicit-globals': 'error',
        'no-implied-eval': 'error',
        'no-invalid-this': 'error',
        'no-iterator': 'error',
        'no-labels': 'error',
        'no-lone-blocks': 'error',
        'no-loop-func': 'error',
        'no-magic-numbers': [
            'warn',
            { ignore: [-1, 0, 1, 2, 100, 200, 204, 300, 404, 500, 1000, 1024] },
        ],
        'no-multi-str': 'error',
        'no-new': 'error',
        'no-new-func': 'error',
        'no-new-wrappers': 'error',
        'no-octal-escape': 'error',
        'no-param-reassign': 'error',
        'no-proto': 'error',
        'no-return-assign': 'error',
        'no-return-await': 'error',
        'no-script-url': 'error',
        'no-self-compare': 'error',
        'no-sequences': 'error',
        'no-throw-literal': 'error',
        'no-unmodified-loop-condition': 'error',
        'no-unused-expressions': ['error', { allowTernary: true }],
        'no-useless-call': 'error',
        'no-useless-concat': 'error',
        'no-useless-return': 'error',
        'no-void': 'error',
        'no-warning-comments': 'warn',
        'prefer-promise-reject-errors': 'error',
        'prefer-regex-literals': 'error',
        'require-await': 'error',
        'require-unicode-regexp': 'error',
        'wrap-iife': 'error',
        yoda: 'error',
        strict: ['error', 'never'],
        'init-declarations': ['error', 'always'],
        'no-label-var': 'error',
        'no-shadow': 'error',
        'no-undef-init': 'error',
        'no-undefined': 'error',
        'no-use-before-define': 'error',
        camelcase: 'error',
        'capitalized-comments': ['error', 'never'],
        'func-name-matching': 'error',
        'func-style': 'error',
        'id-length': ['error', { max: 24, min: 1, properties: 'never' }],
        'line-comment-position': 'error',
        'lines-around-comment': [
            'error',
            {
                beforeBlockComment: true,
                afterBlockComment: true,
                beforeLineComment: true,
                afterLineComment: false,
            },
        ],
        'lines-between-class-members': 'error',
        'max-lines-per-function': 'error',
        'multiline-comment-style': ['error', 'bare-block'],
        'new-cap': 'error',
        'new-parens': 'error',
        'no-array-constructor': 'error',
        'no-bitwise': 'error',
        'no-continue': 'error',
        'no-inline-comments': 'error',
        'no-lonely-if': 'error',
        'no-multi-assign': 'error',
        'no-negated-condition': 'error',
        'no-nested-ternary': 'error',
        'no-new-object': 'error',
        'no-unneeded-ternary': 'error',
        'no-restricted-imports': [
            'error',
            {
                paths: ['moment', 'lodash'],
            },
        ],
        'one-var': ['error', 'never'],
        'operator-assignment': 'error',
        'prefer-exponentiation-operator': 'error',
        'prefer-object-spread': 'error',
        'spaced-comment': 'error',
        'wrap-regex': 'error',
        'no-confusing-arrow': 'error',
        'no-useless-computed-key': 'error',
        'no-useless-constructor': 'error',
        'no-useless-rename': 'error',
        'no-var': 'error',
        'prefer-const': 'error',
        'prefer-destructuring': 'error',
        'prefer-spread': 'error',
        'prefer-template': 'error',
        'symbol-description': 'error',
        'template-curly-spacing': 'error',
        'import/order': [
            'error',
            {
                groups: ['builtin', 'external', 'internal'],
                pathGroups: [
                    { pattern: 'react', group: 'external', position: 'before' },
                    { pattern: 'component/**', group: 'internal', position: 'after' },
                    { pattern: 'lib/**', group: 'internal', position: 'after' },
                    { pattern: 'classnames', group: 'external', position: 'before' },
                    { pattern: 'next/**', group: 'external', position: 'before' },
                ],
                pathGroupsExcludedImportTypes: ['react'],
                'newlines-between': 'always',
                alphabetize: {
                    order: 'asc',
                    caseInsensitive: true,
                },
            },
        ],
        'import/newline-after-import': ['error', { count: 1 }],
        'import/first': 'error',
        'import/exports-last': 'warn',
        'import/no-absolute-path': 'error',
        'import/no-default-export': 'error',
        'import/no-duplicates': 'error',
        'import/no-extraneous-dependencies': 'warn',
        'import/no-mutable-exports': 'error',
        'import/no-named-as-default-member': 'warn',
        'import/no-named-as-default': 'error',
        'import/no-relative-parent-imports': 'warn',
        'import/no-self-import': 'error',
        'import/no-commonjs': 'error',
        'import/no-cycle': ['error', { ignoreExternal: true }],
        'import/no-useless-path-segments': 'error',
        'import/no-webpack-loader-syntax': 'error',
        'import/unambiguous': 'error',
        'sonarjs/no-all-duplicated-branches': 'error',
        'sonarjs/no-element-overwrite': 'warn',
        'sonarjs/no-identical-conditions': 'error',
        'sonarjs/no-identical-expressions': 'error',
        'sonarjs/cognitive-complexity': ['error', 10],
        'sonarjs/max-switch-cases': 'error',
        'sonarjs/no-collapsible-if': 'error',
        'sonarjs/no-collection-size-mischeck': 'error',
        'sonarjs/no-duplicated-branches': 'error',
        'sonarjs/no-identical-functions': 'error',
        'sonarjs/no-inverted-boolean-check': 'error',
        'sonarjs/no-redundant-boolean': 'error',
        'sonarjs/no-redundant-jump': 'error',
        'sonarjs/no-small-switch': 'error',
        'sonarjs/no-unused-collection': 'error',
        'sonarjs/no-useless-catch': 'error',
        'sonarjs/prefer-immediate-return': 'error',
        'sonarjs/prefer-object-literal': 'error',
        'sonarjs/prefer-single-boolean-return': 'error',
        'sonarjs/prefer-while': 'error',
        'no-secrets/no-secrets': [
            'error',
            {
                ignoreContent: ['^https://www.youtube.com/', '^https://fonts.googleapis.com/'],
                // from https://github.com/dxa4481/truffleHogRegexes/blob/master/truffleHogRegexes/regexes.json
                additionalRegexes: {
                    'Slack Token': '(xox[p|b|o|a]-[0-9]{12}-[0-9]{12}-[0-9]{12}-[a-z0-9]{32})',
                    'RSA private key': '-----BEGIN RSA PRIVATE KEY-----',
                    'SSH (DSA) private key': '-----BEGIN DSA PRIVATE KEY-----',
                    'SSH (EC) private key': '-----BEGIN EC PRIVATE KEY-----',
                    'PGP private key block': '-----BEGIN PGP PRIVATE KEY BLOCK-----',
                    'Amazon AWS Access Key ID': 'AKIA[0-9A-Z]{16}',
                    'Amazon MWS Auth Token':
                        'amzn\\.mws\\.[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}',
                    'AWS API Key': 'AKIA[0-9A-Z]{16}',
                    'Facebook Access Token': 'EAACEdEose0cBA[0-9A-Za-z]+',
                    'Facebook OAuth':
                        '[f|F][a|A][c|C][e|E][b|B][o|O][o|O][k|K].*[\'|"][0-9a-f]{32}[\'|"]',
                    GitHub: '[g|G][i|I][t|T][h|H][u|U][b|B].*[\'|"][0-9a-zA-Z]{35,40}[\'|"]',
                    'Generic API Key':
                        '[a|A][p|P][i|I][_]?[k|K][e|E][y|Y].*[\'|"][0-9a-zA-Z]{32,45}[\'|"]',
                    'Generic Secret':
                        '[s|S][e|E][c|C][r|R][e|E][t|T].*[\'|"][0-9a-zA-Z]{32,45}[\'|"]',
                    'Google API Key': 'AIza[0-9A-Za-z\\-_]{35}',
                    'Google Cloud Platform API Key': 'AIza[0-9A-Za-z\\-_]{35}',
                    'Google Cloud Platform OAuth':
                        '[0-9]+-[0-9A-Za-z_]{32}\\.apps\\.googleusercontent\\.com',
                    'Google Drive API Key': 'AIza[0-9A-Za-z\\-_]{35}',
                    'Google Drive OAuth':
                        '[0-9]+-[0-9A-Za-z_]{32}\\.apps\\.googleusercontent\\.com',
                    'Google (GCP) Service-account': '"type": "service_account"',
                    'Google Gmail API Key': 'AIza[0-9A-Za-z\\-_]{35}',
                    'Google Gmail OAuth':
                        '[0-9]+-[0-9A-Za-z_]{32}\\.apps\\.googleusercontent\\.com',
                    'Google OAuth Access Token': 'ya29\\.[0-9A-Za-z\\-_]+',
                    'Google YouTube API Key': 'AIza[0-9A-Za-z\\-_]{35}',
                    'Google YouTube OAuth':
                        '[0-9]+-[0-9A-Za-z_]{32}\\.apps\\.googleusercontent\\.com',
                    'Heroku API Key':
                        '[h|H][e|E][r|R][o|O][k|K][u|U].*[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}',
                    'MailChimp API Key': '[0-9a-f]{32}-us[0-9]{1,2}',
                    'Mailgun API Key': 'key-[0-9a-zA-Z]{32}',
                    'Password in URL':
                        '[a-zA-Z]{3,10}://[^/\\s:@]{3,20}:[^/\\s:@]{3,20}@.{1,100}["\'\\s]',
                    'PayPal Braintree Access Token':
                        'access_token\\$production\\$[0-9a-z]{16}\\$[0-9a-f]{32}',
                    'Picatic API Key': 'sk_live_[0-9a-z]{32}',
                    'Slack Webhook':
                        'https://hooks.slack.com/services/T[a-zA-Z0-9_]{8}/B[a-zA-Z0-9_]{8}/[a-zA-Z0-9_]{24}',
                    'Stripe API Key': 'sk_live_[0-9a-zA-Z]{24}',
                    'Stripe Restricted API Key': 'rk_live_[0-9a-zA-Z]{24}',
                    'Square Access Token': 'sq0atp-[0-9A-Za-z\\-_]{22}',
                    'Square OAuth Secret': 'sq0csp-[0-9A-Za-z\\-_]{43}',
                    'Twilio API Key': 'SK[0-9a-fA-F]{32}',
                    'Twitter Access Token':
                        '[t|T][w|W][i|I][t|T][t|T][e|E][r|R].*[1-9][0-9]+-[0-9a-zA-Z]{40}',
                    'Twitter OAuth':
                        '[t|T][w|W][i|I][t|T][t|T][e|E][r|R].*[\'|"][0-9a-zA-Z]{35,44}[\'|"]',
                },
            },
        ],
        'unicorn/better-regex': 'error',
        'unicorn/catch-error-name': 'error',
        'unicorn/consistent-function-scoping': 'error',
        'unicorn/error-message': 'error',
        'unicorn/escape-case': 'error',
        'unicorn/explicit-length-check': 'error',
        'unicorn/filename-case': [
            'error',
            {
                case: 'kebabCase',
            },
        ],
        'unicorn/no-abusive-eslint-disable': 'error',
        'unicorn/no-array-instanceof': 'error',
        'unicorn/no-fn-reference-in-iterator': 'error',
        'unicorn/no-for-loop': 'error',
        'unicorn/no-hex-escape': 'error',
        'unicorn/no-new-buffer': 'error',
        'unicorn/no-null': 'warn',
        'unicorn/no-object-as-default-parameter': 'error',
        'unicorn/no-process-exit': 'error',
        'unicorn/no-reduce': 'error',
        'unicorn/no-unreadable-array-destructuring': 'error',
        'unicorn/no-unsafe-regex': 'error',
        'unicorn/no-useless-undefined': 'error',
        'unicorn/no-zero-fractions': 'error',
        'unicorn/prefer-add-event-listener': 'error',
        'unicorn/prefer-array-find': 'error',
        'unicorn/prefer-dataset': 'error',
        'unicorn/prefer-event-key': 'error',
        'unicorn/prefer-flat-map': 'error',
        'unicorn/prefer-includes': 'error',
        'unicorn/prefer-modern-dom-apis': 'error',
        'unicorn/prefer-negative-index': 'error',
        'unicorn/prefer-node-append': 'error',
        'unicorn/prefer-node-remove': 'error',
        'unicorn/prefer-optional-catch-binding': 'error',
        'unicorn/prefer-query-selector': 'error',
        'unicorn/prefer-replace-all': 'error',
        'unicorn/prefer-set-has': 'error',
        'unicorn/prefer-spread': 'error',
        'unicorn/prefer-starts-ends-with': 'error',
        'unicorn/prefer-string-slice': 'error',
        'unicorn/prefer-text-content': 'error',
        'unicorn/prefer-trim-start-end': 'error',
        'unicorn/prefer-type-error': 'error',
        'unicorn/prevent-abbreviations': [
            'error',
            {
                replacements: {
                    props: {
                        properties: false,
                    },
                    res: false,
                    req: false,
                    ref: false,
                    dev: false,
                    prod: false,
                    docs: false,
                    args: {
                        arguments: false,
                    },
                },
            },
        ],
        'unicorn/throw-new-error': 'error',
        'eslint-comments/disable-enable-pair': ['error', { allowWholeFile: true }],
        'eslint-comments/no-duplicate-disable': 'error',
        'eslint-comments/no-unlimited-disable': 'error',
        'eslint-comments/no-unused-disable': 'error',
        'eslint-comments/no-unused-enable': 'error',
        // used to ensure specific rules cannot be disabled
        'eslint-comments/no-restricted-disable': ['error'],
        'eslint-comments/require-description': 'error',
        'deprecation/deprecation': 'warn',
        '@typescript-eslint/array-type': 'error',
        '@typescript-eslint/consistent-type-assertions': 'error',
        '@typescript-eslint/consistent-type-definitions': ['error', 'type'],
        '@typescript-eslint/consistent-type-imports': 'error',
        '@typescript-eslint/method-signature-style': ['error', 'property'],
        '@typescript-eslint/no-confusing-non-null-assertion': 'error',
        '@typescript-eslint/no-dynamic-delete': 'error',
        '@typescript-eslint/no-floating-promises': 'error',
        '@typescript-eslint/no-invalid-void-type': 'error',
        '@typescript-eslint/no-implicit-any-catch': 'error',
        '@typescript-eslint/no-namespace': [
            'error',
            { allowDeclarations: true, allowDefinitionFiles: true },
        ],
        '@typescript-eslint/no-unnecessary-boolean-literal-compare': 'error',
        '@typescript-eslint/no-unnecessary-condition': 'error',
        '@typescript-eslint/no-unnecessary-qualifier': 'error',
        '@typescript-eslint/no-unnecessary-type-arguments': 'error',
        '@typescript-eslint/prefer-for-of': 'error',
        '@typescript-eslint/prefer-includes': 'error',
        '@typescript-eslint/prefer-nullish-coalescing': 'error',
        '@typescript-eslint/prefer-optional-chain': 'error',
        '@typescript-eslint/prefer-reduce-type-parameter': 'error',
        '@typescript-eslint/prefer-string-starts-ends-with': 'error',
        '@typescript-eslint/prefer-ts-expect-error': 'error',
        'unused-imports/no-unused-imports-ts': 'error',
    },
    overrides: [
        {
            files: ['**/*.d.ts'],
            rules: {
                'import/unambiguous': 'off',
            },
        },
    ],
}
